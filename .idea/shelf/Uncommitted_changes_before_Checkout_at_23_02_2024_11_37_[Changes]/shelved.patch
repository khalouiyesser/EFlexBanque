Index: src/Entity/Demandestage.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\nnamespace App\\Entity;\r\n\r\nuse App\\Repository\\DemandeStageRepository;\r\nuse Doctrine\\DBAL\\Types\\Types;\r\nuse Doctrine\\ORM\\Mapping as ORM;\r\nuse Symfony\\Component\\Validator\\Constraints as Assert;\r\n#[ORM\\Entity(repositoryClass: DemandeStageRepository::class)]\r\nclass Demandestage\r\n{\r\n    #[ORM\\Id]\r\n    #[ORM\\GeneratedValue]\r\n    #[ORM\\Column]\r\n    private ?int $id = null;\r\n\r\n    #[ORM\\Column(length: 30,nullable: true)]\r\n    #[Assert\\NotBlank(message: 'Veuillez saisir votre nom')]\r\n    #[Assert\\Length(\r\n        min :3,\r\n        max: 30 ,\r\n        minMessage: \"Le nom doit contenir au moins {{ limit }} caractères\",\r\n        maxMessage: \"Le nom doit contenir au plus {{ limit }} caractères\",\r\n    )]\r\n    #[Assert\\Regex(pattern: '/[a-zA-Z]/',\r\n        message:' le nom du pack doit contenir que des lettres !!')]\r\n    private ?string $nom =null;\r\n\r\n    #[ORM\\Column(length: 30)]\r\n    #[Assert\\NotBlank(message: 'Veuillez saisir votre prenom')]\r\n    #[Assert\\Length(\r\n        min :3,\r\n        max: 30 ,\r\n        minMessage: \"Le prénom doit contenir au moins {{ limit }} caractères\",\r\n        maxMessage: \"Le prénom doit contenir au plus {{ limit }} caractères\",\r\n    )]\r\n    #[Assert\\Regex(pattern: '/[a-zA-Z]/',\r\n        message:' le prénom du pack doit contenir que des lettres !!')]\r\n    private ?string $prenom = null;\r\n\r\n    #[ORM\\Column(length: 40)]\r\n    #[Assert\\NotBlank(message: 'Email obligatoire')]\r\n    #[Assert\\Email(\r\n        message: 'The email {{ value }} is not a valid email.',\r\n    )]\r\n    private ?string $email = null;\r\n    #[ORM\\Column]\r\n    #[Assert\\NotBlank(message: 'Veuillez saisir votre numéro de téléphone')]\r\n    #[Assert\\Length(min: 8, max: 8, exactMessage: 'Le numéro de téléphone doit contenir 8 chiffres')]\r\n    #[Assert\\Regex(pattern: '/^(2|5|9)[0-9]{7}$/', message: 'Le numéro de téléphone doit commencer par 2 ou 5 ou 9 et contenir 8 chiffres')]\r\n    private ?int $numerotelephone = null;\r\n    \r\n    \r\n    #[ORM\\Column(type: Types::TEXT, nullable: true)]\r\n    #[Assert\\NotBlank(message: 'Veuillez saisir une lettre de motivation')]\r\n    #[Assert\\Length(max: 500,minMessage: 'La lettre de motivation doit etre moins 500 characters ')]\r\n    private ?string $lettremotivation = null;\r\n\r\n    #[ORM\\Column(length: 50, nullable: true)]\r\n    #[Assert\\NotBlank(message: 'Veuillez entrer votre CV en pdf ')]\r\n    private ?string $cv = null;\r\n    \r\n    #[ORM\\Column(length: 50, nullable: true)]\r\n    #[Assert\\NotBlank(message: 'Veuillez choisir un domaine')]\r\n    private ?string $domaine = null;\r\n\r\n    #[ORM\\Column( type: Types::DATE_MUTABLE)]\r\n    #[Assert\\GreaterThan(value: \"today\", message: \"Date Invalide !!\")]\r\n    #[Assert\\NotBlank(message: 'Veuillez choisir la date du stage')]\r\n    private ?\\DateTimeInterface $date = null;\r\n\r\n    #[ORM\\Column(nullable: true)]\r\n    private ?bool $etat = null;\r\n\r\n    #[ORM\\ManyToOne(inversedBy: 'demande')]\r\n    private ?OffreStage $offreStage = null;\r\n\r\n    public function getId(): ?int\r\n    {\r\n        return $this->id;\r\n    }\r\n\r\n    public function getNom(): ?string\r\n    {\r\n        return $this->nom;\r\n    }\r\n\r\n    public function setNom(string $nom): static\r\n    {\r\n        $this->nom = $nom;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getPrenom(): ?string\r\n    {\r\n        return $this->prenom;\r\n    }\r\n\r\n    public function setPrenom(string $prenom): static\r\n    {\r\n        $this->prenom = $prenom;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getEmail(): ?string\r\n    {\r\n        return $this->email;\r\n    }\r\n\r\n    public function setEmail(string $email): static\r\n    {\r\n        $this->email = $email;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getNumerotelephone(): ?int\r\n    {\r\n        return $this->numerotelephone;\r\n    }\r\n\r\n    public function setNumerotelephone(int $numerotelephone): static\r\n    {\r\n        $this->numerotelephone = $numerotelephone;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getCv(): ?string\r\n    {\r\n        return $this->cv;\r\n    }\r\n\r\n    public function setCv(?string $cv): static\r\n    {\r\n        $this->cv = $cv;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getLettremotivation(): ?string\r\n    {\r\n        return $this->lettremotivation;\r\n    }\r\n\r\n    public function setLettremotivation(?string $lettremotivation): static\r\n    {\r\n        $this->lettremotivation = $lettremotivation;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getDomaine(): ?string\r\n    {\r\n        return $this->domaine;\r\n    }\r\n\r\n    public function setDomaine(?string $domaine): static\r\n    {\r\n        $this->domaine = $domaine;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getDate(): ?\\DateTimeInterface\r\n    {\r\n        return $this->date;\r\n    }\r\n\r\n    public function setDate(\\DateTimeInterface $date): static\r\n    {\r\n        $this->date = $date;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function isEtat(): ?bool\r\n    {\r\n        return $this->etat;\r\n    }\r\n\r\n    public function setEtat(?bool $etat): static\r\n    {\r\n        $this->etat = $etat;\r\n\r\n        return $this;\r\n    }\r\n\r\n    public function getOffreStage(): ?OffreStage\r\n    {\r\n        return $this->offreStage;\r\n    }\r\n\r\n    public function setOffreStage(?OffreStage $offreStage): static\r\n    {\r\n        $this->offreStage = $offreStage;\r\n\r\n        return $this;\r\n    }\r\n\r\n\r\n//          Cette fonction donne une condition sur la date !!\r\n//    public static function validateDate($value, ExecutionContextInterface $context, $payload)\r\n//    {\r\n//        if ($value instanceof \\DateTimeInterface) {\r\n//            // La date doit être d'au moins une semaine après la date actuelle\r\n//            $today = new \\DateTime();\r\n//            $oneWeekLater = (clone $today)->modify('+1 week');\r\n//\r\n//            if ($value < $oneWeekLater) {\r\n//                $context->buildViolation('La date doit être au moins une semaine après la date actuelle')\r\n//                    ->addViolation();\r\n//            }\r\n//        }\r\n//    }\r\n    \r\n}\r\n
===================================================================
diff --git a/src/Entity/Demandestage.php b/src/Entity/Demandestage.php
--- a/src/Entity/Demandestage.php	
+++ b/src/Entity/Demandestage.php	
@@ -23,7 +23,7 @@
         maxMessage: "Le nom doit contenir au plus {{ limit }} caractères",
     )]
     #[Assert\Regex(pattern: '/[a-zA-Z]/',
-        message:' le nom du pack doit contenir que des lettres !!')]
+        message:' le nom doit contenir que des lettres !!')]
     private ?string $nom =null;
 
     #[ORM\Column(length: 30)]
@@ -35,7 +35,7 @@
         maxMessage: "Le prénom doit contenir au plus {{ limit }} caractères",
     )]
     #[Assert\Regex(pattern: '/[a-zA-Z]/',
-        message:' le prénom du pack doit contenir que des lettres !!')]
+        message:' le prénom doit contenir que des lettres !!')]
     private ?string $prenom = null;
 
     #[ORM\Column(length: 40)]
Index: templates/frontOffice/offre_stage/Details.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends 'index.html.twig' %}\r\n{% block title %} Recrutement {% endblock %}\r\n{% block stylsheet %}\r\n\r\n{% endblock %}\r\n{% block body %}\r\n    <body class=\"body\" style=\" background: linear-gradient(90deg, rgba(61, 66, 66, 0.9) 0%, rgb(66, 70, 68) 15%, rgb(75,100,88) 50%,rgb(86,162,124) 75%);\">\r\n             <div  style=\"background: #d4e3da; margin: 160px 300px 50px;border-radius: 30px\">\r\n                        <h4 class=\"text-center\" style=\"padding-top: 20px;text-align: center;\">{{ offre.title }}</h4>\r\n                        <table border=\"2\" style=\"margin-top: 50px;margin-left: 200px;table-layout: fixed;\r\n                                      width: 70%;\r\n                                      font-style: italic;\r\n                                      border: 1px solid #000000;\">\r\n                            <tr>\r\n                                <td >\r\n                                  <div style=\"margin-left: 10px;margin-bottom: 10px;\"> <div style=\"margin-top: 5px;margin-bottom: 5px\"> Postes vacantes:</div> <div style=\"margin-top: 5px\"> {{ offre.postePropose }} </div></div>\r\n                                </td>\r\n                                <td>\r\n                                    <div style=\"margin-left: 10px;margin-bottom: 10px;\"> <div style=\"margin-top: 5px;margin-bottom: 5px\">Type d'offre: </div> <div style=\"margin-top: 5px\"> {{ offre.typeOffre }}</div></div>\r\n                                </td>\r\n                                <td>\r\n                                    <div style=\"margin-left: 10px;margin-bottom: 10px;\">  <div style=\"margin-top: 5px;margin-bottom: 5px\"> Experience:</div> <div style=\"margin-top: 5px\"> {{ offre.experience }}</div></div>\r\n                                </td>\r\n                            </tr>\r\n                             <tr>\r\n                                <td>\r\n                                    <div style=\"margin-left: 10px;margin-bottom: 10px;\">  <div  style=\"margin-top: 5px;margin-bottom: 5px\"> Niveau:</div> <div style=\"margin-top: 5px\"> {{ offre.niveau }} </div></div>\r\n                                </td>\r\n                                <td>\r\n                                    <div style=\"margin-left: 10px;margin-bottom: 10px;\">  <div style=\"margin-top: 5px;margin-bottom: 5px\">Language: </div> <div style=\"margin-top: 5px\"> {% for i in  offre.language %} {{ i }} {% endfor %}</div></div>\r\n                                </td>\r\n\r\n                             </tr>\r\n\r\n\r\n\r\n                        </table>\r\n                                    <div class=\"mb-3\" style=\"padding: 20px\">\r\n\r\n                                        <h6 class=\"card-subtitle mb-2 text-body-secondary \">Description :</h6>\r\n                                        <p class=\"card-text font-italic\">{{ offre.description }}</p>\r\n                                        <br>\r\n                                        <h6 class=\"card-subtitle mb-2 text-body-secondary\">Exigences :</h6>\r\n                                        <p class=\"card-text\" style=\"margin-top: 5px\">{{ offre.exigenceOffre }}</p>\r\n                                        <h6 class=\"card-subtitle mb-2 text-body-secondary \" style=\"margin-top: 20px\">mots clés :</h6>\r\n{#                                        <p class=\"card-text\" style=\"margin-top: 5px\">#}\r\n                                            {% for i in offre.motsCles %}\r\n                                            <div>{{'-' ~ ' ' ~ i }}</div>\r\n\r\n                                        {% endfor %}\r\n                                        <h6 class=\"card-subtitle mb-2 text-body-secondary\" style=\"margin-top: 20px\">Date de postulation :</h6>\r\n                                        <p class=\"card-text\" style=\"margin-top: 5px\">{{ offre.datePostu | date('d F Y')}}</p>\r\n                                    </div>\r\n               <a href=\"{{ path('demandeStageOffre',{'id': offre.id}) }}\">  <button type=\"submit\" class=\"btn btn-primary btn-lg btn-block\" style=\"\">Postuler maintenant </button> </a>\r\n\r\n\r\n             </div>\r\n\r\n    </body>\r\n{% endblock %}
===================================================================
diff --git a/templates/frontOffice/offre_stage/Details.html.twig b/templates/frontOffice/offre_stage/Details.html.twig
--- a/templates/frontOffice/offre_stage/Details.html.twig	
+++ b/templates/frontOffice/offre_stage/Details.html.twig	
@@ -31,9 +31,6 @@
                                 </td>
 
                              </tr>
-
-
-
                         </table>
                                     <div class="mb-3" style="padding: 20px">
 
